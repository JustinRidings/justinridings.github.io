@page "/bored"
@using Newtonsoft.Json

@inject HttpClient Http

<PageTitle>Bored</PageTitle>

<FluentCard>
    <FluentStack Orientation="Orientation.Vertical"
                 HorizontalAlignment="HorizontalAlignment.Center"
                 VerticalAlignment="VerticalAlignment.Center" VerticalGap="20">
        @if (isLoading == false)
        {
            <FluentStack Orientation="Orientation.Vertical" HorizontalAlignment="HorizontalAlignment.Center" VerticalAlignment="VerticalAlignment.Center">
                @if (Result != null)
                {
                    <FluentLabel Typo="Typography.HeroTitle">
                        <strong>@Result.Activity</strong>
                    </FluentLabel>
                    <FluentSpacer />
                    @if(Result.Link != null && Result.Link != string.Empty)
                    {
                        <FluentLabel Typo="Typography.H2">
                        <a href="@Result.Link">@Result.Link</a>
                        </FluentLabel>
                    }
                }
            </FluentStack>
        }
        else
        {
            <FluentProgressRing />
        }
    </FluentStack>
    <FluentSpacer />
    <FluentStack HorizontalAlignment="HorizontalAlignment.Center">
        <FluentButton Appearance="Appearance.Accent" OnClick="GetActivityAsync" Style="padding-top:10px">
            I'm bored...
        </FluentButton>
    </FluentStack>
</FluentCard>

@code {
    bool isLoading { get; set; }
    public ActivityResult? Result { get; set; }
    public System.Timers.Timer Time { get; set; } = new System.Timers.Timer(3000);

    private async Task GetActivityAsync()
    {
        isLoading = true;

        var queryResult = await Http.GetAsync($"https://www.boredapi.com/api/activity/");
        Result = JsonConvert.DeserializeObject<ActivityResult?>(await queryResult.Content.ReadAsStringAsync() ?? string.Empty) ?? null;

        isLoading = false;
    }

}
