@page "/weather"
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <FluentLabel>There's nothing here...yet...</FluentLabel>
@*     <FluentDataGrid Id="weathergrid" Items=@forecasts.AsQueryable() GridTemplateColumns="1fr 1fr 1fr 2fr" TGridItem=WeatherForecast>
        <PropertyColumn Title="Date" Property="@(c => c!.Date)" Sortable="true" Align="Align.Start" />
        <PropertyColumn Title="Temp. (C)" Property="@(c => c!.TemperatureC)" Sortable="true" Align="Align.Center" />
        <PropertyColumn Title="Temp. (F)" Property="@(c => c!.TemperatureF)" Sortable="true" Align="Align.Center" />
        <PropertyColumn Title="Summary" Property="@(c => c!.Summary)" Sortable="true" Align="Align.End" />
    </FluentDataGrid> *@
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        //forecasts = await FetchWeatherAsync();
    }

    // private async Task<WeatherForecast[]> FetchWeatherAsync()
    // {
    //     // Replace 'YourAPIKey' with your actual API key and 'YourCityID' with your city ID

    //     if (response.IsSuccessStatusCode)
    //     {
    //         var weatherData = await response.Content.ReadFromJsonAsync<OpenWeatherResponse>();
    //         // Map the API response to your WeatherForecast model
    //         return new[] { new WeatherForecast
    //         {
    //             Date = DateOnly.FromDateTime(DateTime.Now)
    //         }};
    //     }
    //     else
    //     {
    //         // Handle the error appropriately
    //         return Array.Empty<WeatherForecast>();
    //     }
    // }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }

    // Define a model that matches the structure of the OpenWeather API response
    public class OpenWeatherResponse
    {
        public string[] Main { get; set; }
        public string[] Weather { get; set; }
    }
}
